@Markus Lange, Spine exports data to a JSON format. Maybe you can write something for Blender to be able to import this format. @Sirawat, it is possible to use it to create levels, however I think there might be better options out there for this, both with and without bounding boxes. Another option to look at that looks quite promising (haven't worked with it myself yet) is R.U.B.E -Søren @These Brothers Games, on our Trello board we have this feature <url>øren @Tim Day, you can follow the runtime progress here - <url>øren @NexusSteve, we will most likely make the workshop videos available for a small fee in the future. Afraid I can't yet say when. - Søren @Craig, we've been a bit busy fixing some mac problems for the last four days. Runtimes will be picked up on again today. We're planning on doing a more detailed update later on. @Mohamed, you'll just need to wait for Kickstarter to check again. If you want more specific information contact Kickstarter directly and ask them about it. Once it goes through, we'll send out the license for you, we check for this stuff a couple of times every day. Thanks for backing us, sorry to hear that you're having problems with Amazon. Download links should now be working again and we're monitoring the server so hopefully it won't happen again. For those of you having a problem downloading. It seems like our server is being hammered from the massive amount of downloads being tried. We're working on getting fixed ASAP! Once we have it running smoothly again we'll let you know. Sorry for the inconvenience. @S.D, cool, glad to hear you found it easy to use. Regarding your question. Currently there is plenty to do with getting all the stretch goal runtimes and features sorted out. So if we do add that, it will probably take a while. @Craig Hinrichs, thanks! We have now started sending out liceses. Thanks a lot everyone. We'll be making an update and we'll try to answer the questions many of you have been asking. We'll also update you on how the licenses will be sent. @Pranart Dechpokket, Spine already supports Gideros, see here: <url>ément Vayer, I guess it depends on what you are doing. I think a more important trick is this: right click will toggle to the last used tool. This means you can click rotate and then translate, then switch between the two just be right clicking. This makes it quite rare to have to go to the toolbar and click a tool. @Evan Z, thanks. We already made a thread on reddit, but can do another one once we hit 48 hours left maybe. @Duke Nukem, for something like that, you would want to do a bunch of image switching combined with the skeletons. I'm afraid doing a tutorial for that at this moment isn't possible, it's a lot of work and with the Kickstarter ending soon, finding time to do it will be difficult. If you get started on doing it and run into problems you can always register on our forum and ask more specific questions, then we can try to help there. Other users might also have an idea of how you can do it. @Greg, Afraid I don't know much about Parallella, but if it supports Java and OpenGL it should run. @Jordan York, @Jason S, @Andrew McDermott, thanks guys, it means a lot :) @Wesley Robb, we had a talk about it, and it doesn't seem like it will be super difficult to do. We'll give you a more detailed update about this once we have gotten a some of the other things sorted. -Søren @Daniel Branicki, we've added that feature to our list, it will be implemented together with different controls for trackpads. @Duke Nukem, I guess it all depends on the graphics you make, it shouldn't be a problem to use Spine for it now. We've already seen a couple of people using Spine to create top down style graphics. @Craig Hinrichs, the runtimes support different sizes of images switched on the fly you can have multiple sets of images. @Duke Nukem, Most features will be implemented, but it will take longer than if we reach the stretch goals. There will also be other features implemented which is not currently in the stretch goals list. We plan to support and expand on Spine for a long time :) @wetSpot, a Spine license gets you all future updates to Spine. Hey guys, sorry for the late replies, it's been a super busy day. @Tim Day, It's hard to say exactly, but you can probably expect the Unity runtime within 3-4 weeks, maybe sooner. Futile will be the one Nate works on first, then 2D Toolkit. @Robert Lovelett, Vectors are indeed easier to scale, one way you can get around this is to have multiple sizes of your images, the runtimes will support this. Of course this means more data, but DrSchizo sounded like he might have a solution for that. That's not something I've used myself, so I can't really say much about it. @Moritz Voss, thanks a lot! We are looking forward to see what you guys will come up with using Spine :) @John Z, We talked about generic C a couple of days ago, I'm not entirely sure what the verdict is on it though. I'm sure it's doable though. @Lyle Cox, I believe we got things sorted :) @Matthew Campbell, documentation for Binary is on the way. @Ockonal, can't wait to see what you've all been doing with the Trial version :D Version 1.0.11 was uploaded about an hour ago, this fixes an issue with Windows 7, so if you're having problems with the Trial, go grab the new version. Nate is working really hard trying to make everything come together. Let's get to C# and then we can start going for some more features! :D Thanks once again for all the support! It really motivates us to make Spine better and better. - Søren @Robert Lovelett, you know you can try out Spine right now? Yes, it can be used to create cut scenes. Spine supports multiple skeletons in the same project (aka scene), so you could have multiple skeletons animated so they appear to interact. I don't know what the SWF/ScaleForm/etc does that makes it large. For Spine, the file size really depends on the images used. The Spine animation data is quite small, especially the binary format but even the JSON zipped is pretty small. I suggest looking at using JPG to reduce image file size. You can use an indexed palette PNG, maybe 16 or 32 colors, to store transparency information, then at load time combine the JPG with the PNG so you still have transparency. Spine animations use interpolation, so you can pass any time to them and they will pose the skeleton for that time. If you use time that comes from your audio processor, then the animation will match the audio. Using Spine for cut scenes is one of the expected use cases. Honestly though, most usage is not for cut scenes, so we haven't been focusing a lot on this use case. Eg, skeletons are ordered based on the order they are added, and this draw order cannot be changed or keyed. Ideally you could drag and drop skeletons in the tree to change the draw order. This is on our task list, but we haven't gottten to it yet. Anyway, I suggest grabbing the trial version of Spine and see how creating a cut scene goes. A great feature for cut scenes that we won't be able to get to soon would be an animation mixer. This is similar to the dopesheet, but you move around whole animations rather than keys. Without this, each skeleton in your cutscene probably only has a single animation, making it somewhat harder to reuse and retime animations in the cut scene (you'd have to copy/paste and move around keys instead). @DrSchizo, we're discussing it internally, can't make any promises. @Ubu, the generic Lua runtime should make Moai integration relatively simple, we'll be there to support developers who want to make it happen. @dsideb, when the Kickstarter is over we'll continuously be improving Spine. New features will just not be implemented as fast as if we reach the goal here since we'll also have to work on other things to be able to make a living. With that said, FFD is one of the things we really want to do at some point, we know how powerful it is. @Raffaele Esposito, sorry had a bit of a brainfart there. It's for as many games as you create. One feature pr. game. Just keep in mind they need to be released games. @Raffaele Esposito, it is for only one game. @Lyle Cox, an update is in the works, will send it out soon! :) @DrSchizo, currently you can configure the skeleton with the images you want in setup mode, then export as PNGs and Spine will export using the images you have attached. Repeat this process with different images visible in setup mode to export spritesheets that look different. Note however that CPU is often not a bottleneck in games and the additional minimal overhead of using skeletal animation is likely not worth using spritesheets. @Ronny Bangsund, we wan't to support as many people as we can. We'll do our best to support Torque 2D users on the forums once we have the generic runtimes done. Thanks for spreading the word! :) @Duke Nukem, it looks like Torque2D could be supported by using the generic C++ runtime, a stretch goal that we are just about to make! @Jordan York, awesome! :) @Hussain, it's been busy times lately, but we are working on it. It will likely be the next runtime available. If forced to throw out a noncommittal estimate, I'd say within 2 weeks. :) We've added a new pledge level of $45. This pledge is now in effect for anyone who pledged more than $45. Tomorrow we will write a more detailed update. We've been working hard on runtimes and some fixes to Spine. More examples will also be added and we expect a new version to be released tomorrow. Almost there for the C++ goal. Thank you for your continued support! - Søren @Wesley Robb, I think we could support a C API relatively easily based on the C++ API. @Raffaele Esposito, possibly we could support Orthello, but not until all the other work we've promised has been completed. @Cameron Owen, We've talked a bit about doing some work in this area. It would be at a later point should we do it. The possibilities with that are definitely interesting and we know how much great stuff often comes from third parties. @Craig Hinrichs, yes, the cocos2d and Unity runtimes are next and we are currently working on them. Rest assured we are sticking to our initial goals! The stretch goals are for after that. @JJ Our original goals have not changed, so we will be supporting Unity just as planned. @Ricardo I can't say if there will be changes to the window at this time. It is however unlikely, if there are bugs we will of course fix them. Thanks again for the support everyone. -Søren @Arly Rampen thank you for the support! It's 4:30 in the morning here, so it's time to go to bed. We will do our best to answer all questions that might arise on the new stretch goals as soon as we can. @Peter Cobcroft, this is actually possible to do to a certain degree with the current implementation. You would just apply small randomized rotation to select bones in the setup pose, this would be done in your game and not during animation in Spine. @Craig Hinrichs we have the full version available for purchase on our website, this is a bit counterproductive to our Kickstarter, but since we don't receive backer information before the Kickstarter ends and a lot of people wanted to start using it now, we made it available. @Benjamin Green Free-form deformation and how we will implement it, is not set in stone also it is something we can iterate on and improve should we reach the goal. Being able to change the interior of the "mesh" is indeed powerful, and should we reach the goal, it is definitely something we will consider. @Andrew McDermott Thanks, the support so far have already been amazing. Help us spread the word of these new stretch goals to make Spine even better. We will be using Spine for our own projects in the future which means features are likely to be added over time, even features that are not yet listed here. Spine is very dear to us and we will keep improving it. @Andy Lundell, we will document the format soon. We wanted to get a few runtimes done to be sure it's solid. We've now got two and a half runtimes done, and indeed it turns out we had to make some minor changes. I don't think it will change any more though, so we will document it soon. @Ricardo, it could be made to look like a native window, but it wouldn't be so pretty. :p We went out of our way to have a custom frame. Also, you'd lose the fullscreen button. You'd also lose this little secret: right click the close button to toggle always-on-top. @Ricardo, Spine is written in Java using libgdx and it's 2D scene graph called scene2d. This means all of Spine is rendered at 60fps using OpenGL, and that it is exactly the same on each platform. This approach does not look like a native app, but has many benefits. :) @Jordan York, we are working on more documentation (a quick overview is available on our site right now). We'll also consider make video tutorials at some point after the workshop videos. The workshops allow you to ask questions in real time, which some people may like. In the meantime, I would suggest reading a book: The Animator's Survival Kit by Richard Williams. @Jay 'Listege' Yoo, not sure what you are asking... of course you can have different textures for different body parts. Maybe ask a more specific question on our forums? @Arly Rampen, no, not yet, this didn't make it into v1.0. However, you an attach the image to 2 different slots, which can have different draw order. Then instead of changing the draw order, just hide the image on one slot and show it on the other. @Shawn Blais Skinner, oops the download is fixed now, sorry! @DrSchizo, it would be very hard to keep the bones in the same position. Eg, it's very easy for shoulders to need to appear in a new place. Animations can still be reused across skeletons, they will just need a little adjusting. I think you'll find with a little practice you can create new animations and repurpose existing ones quite fast. @James Pollock, we hesitate to make promises, but we will be supporting as many toolkits as we can. Starling is on the list. :) @Matt Jones, yes, the runtimes are only available in the full version though. It will be sent out to the Kickstarter supporters as soon as the Kickstarter is over. It's also available on the website right now. @Darien, to change an image during an animation, in animate mode click the visibility dot in the tree to show or hide the image you like. After doing that a yellow dot will appear next to the slot in the tree, denoting that a change has not yet been keyed. Click this dot to set the key. @DrSchizo, I am sure you will find it quite easy to animate. Existing animations can be repurposed, though joint positions are likely in different places so you'll have to tweak them. @Andy, certainly! :) We plan to continue supporting and even adding features and runtimes to Spine, even if we somehow manage to find some time to work on our own games (which isn't looking terribly likely any time soon, considering how much work Spine has been lately!). @Daniel Quaroni, swapping images doesn't use rules. You can hide or show an image at any time though. Hey guys, not quite the update we were pushing for today, but I thought I'd give you all a little heads up, about what we are doing at the moment. We're still a little in disbelief that we made our goal so quick, it's super awesome, so thanks for all the support! We've spent most of the day working on Spine, and going over how we would handle the next 26 days, more specifically how we could best make sure that Spine will be available to as many different toolkits as possible, and we think we have a pretty good plan for it now. We're not entirely ready for a detailed update about this, since we feel it's important to make sure we can actually deliver eventual stretch goals, instead of just rushing out with them. Thank you once again for being super awesome! -Søren We've added a bit of documentation on our website <url>