From the project coordinator: GOODBYES Hi everyone, I'm sad to tell you that I'm leaving the project, so this will be the last update from me. I hope that I was able to provide at least a little more communication during this time, though I know a lot of questions weren't answered. I'm glad to have gotten to know some of you and I'm sorry I wasn't able to provide more of those answers. Further updates will be up to Alex to arrange. On to the update I had prepared: CODE Developing games for multiple OS's is a challenge under the best of circumstances and for quite a while the only computers available to develop on were Macs. That meant that a lot of functionality couldn't be tested on Windows and a lot of functionality didn't work as intended on the Windows version of the game. Now a Windows system is available to develop on, some of those disparities are being worked on. The first priorities were the code editor hot key and the dialogue display, both key to a smoother and more accessible gaming experience. Up till now the tilde key, used to access the code editor quickly, couldn't do its job. Now, though it needs more work, the code editor can be called up using that hot key in the Windows OS version of Code Hero. The hot key was implemented differently in several places and has been unified to work more consistently. The dialogue text displayed along with the voiced instructions was skipping numerous lines on Windows, due to certain characters being illegal in Windows file names. With the updated file naming conventions, all the voice audio should work equally well on both platforms. Another key area that needs to be worked on is the code itself. A big part of working with a team is building the code in such a way that other people can more easily understand and work with existing code. Inevitably in the first rush of developing a product or a feature, a lot is written - the basic skeleton, working theories, experiments, new methodology. At that time it's not productive to stop and organize everything you do. There's some structure of course, but the methodology to be used is still in flux and the underlying cohesive thrust is only in its infancy. Once things start to settle into a pattern the excess code can be cleaned up and organized into a more readable order/structure/organization. Unfortunately, there often isn't time to do so, which can work for a while, but when teams change members, the code base becomes less maintainable and adding new features without breaking old things can become an issue. It becomes impossible to track down bugs, to fix old features, implement new ones, or to simply move forward with the project. In between working on new code and fixing bugs, one of the things we've started working on is that process. One way to improve the situation is documenting the code - doing such things as writing comments, sometimes with special Doxygen XML-like formats, that clarify what the intention of different pieces of code are, thus the call for those interested working on code documentation. The largest script in Code Hero is NGUIMaster. It is the current focus and we're glad to say that our first foray into cleaning up its regions and documenting it is going well. It's tedious work, but hopefully it will let the team work more cohesively and more efficiently, as well as easing the entry of those who join us in the future. Thank you everyone and, again, I’m glad to have gotten to know you. From the project coordinator: PICS TO STUDY We can’t give you the data, but here are a few pics from a study done yesterday at a Portland public school with 22 sixth graders: UPDATES I’m sad to say that I’m probably not going to be able to update as regularly or as often, but even though you may not hear from us as often we’ll still be working on Code Hero and moving forward with development. Thank you for your kind words of support and your good wishes! From the Project Coordinator: CODE We’re working hard to make the mission system’s internals as efficient to develop with as the brain interface user experience is for exploring the levels. We’ve rewritten the dialogue manager code to prepare it for further work. We’re also trying to turn down the volume of the game in general, though our audio sources are somewhat scattered, so this will have to be done piecemeal as we find them. PILOT STUDIES We are continuing working with Pixel Arts and meanwhile have confirmed another study session with a public school in Portland. They’re very interested in technology, but currently have very little technology support. We’ll be working with their sixth grade Technology class and hope to start in early March. Frustratingly enough, we won’t be able to tell you many details about what’s going on in the pilot studies themselves until after they’re done. That’s how it goes with this kind of research in general - information isn’t made available till all the data has been gathered and assessed. That means that even after the studies themselves are completed, the information has to be compiled and considered before we can communicate about it more specifically. Despite that, it’s very exciting to be working towards putting what we have into observed practice and seeing what comes out of it. SCIENCE! WEBSITE We’re working on collecting in-game images in our efforts to build up the website. If any of you have any views you find particularly striking, use your computer’s screen capturing commands to take a picture and send them in to us at <email> , or just tell us where in Code Hero they are. If you send us a name or nickname that you would like associated with the image, we’ll tag it with that name if we use it. If you need help figuring out how to take a screenshot with your computer, let us know and we’ll try to walk you through it. Remember that you can chat on IRC for help too. Thank you everyone for your words of encouragement, and for celebrating our achievements with us! From the Project Coordinator: TEAM Elizabeth LaPensée ( <url>ée also brings eight years of industry and academic experience as a game designer, writer, and researcher. She is excited about Code Hero as an out-of-the-box solution to teaching programming and providing access to Unity. She will work closely with Pixel Arts and use the results of the pilot studies to guide next steps in design. She’s experienced, enthusiastic, and has some great insights to offer us. CODE Our current design discussions have focused on how to better guide the player along a path of learning and how to implement rewards and the achievement system in a way that will help guide and motivate a player through the stages of learning, giving them more feedback on their progress as they gain game-building skills. The three stages of feedback that we’re discussing targeting are granular, sustained, and cumulative feedback. A few smaller things have been added but here’s the meat of what’s been coded: Using preexisting assets and some new code, Alex has implemented a path that the player walks along while inside that Code Hero brain you see when you get achievements. The player reaches nodes at which they are transported to different levels, each with a set of missions (as you’ve seen). Until one node has been completed, the next node can’t be reached and once a node has been completed, it can be reactivated at any time for another playthrough. Thanks so much for all your support and feedback, we love to hear from you! From the Project Coordinator: Sorry guys, I completely spaced on posting yesterday. On with news. PILOT STUDIES Pilot studies in the last week that involved feedback from educators have helped us focus in on how Code Hero can supplement and replace curriculum in schools. We believe in reaching many spaces, including public schools, after-school programs, libraries, hackerspaces, and homes. The pilot studies are helping to inform how we can best fit in these diverse spaces. Thank you for your support and especially to Pixel Arts as we move forward with pilot studies that involve youth players in the next two weeks. T-SHIRTS There has been a delay with the shirts this past week. They’re still being worked on and you can still change your order and address on the survey, but unfortunately they won’t be sent out yet. We’ll try to keep you updated on progress. As we said, we didn’t want to promise dates until things were actually on their way and this is one example of why we’ve tried to keep to that. SERVER CONCERNS There was a comment on last week’s update posted by Aaron Burke about the user’s settings. He brought up the concern that servers aren’t always reliable. I had described the way in which settings would be saved on the servers, but had not included the information that they would also be saved on the user’s computer, so I wanted to assure you that the settings and achievements that are linked with the user’s profile will be available even when not connected to the server. Thank you everyone for your comments and feedback, we really appreciate your support and involvement! From the Project Coordinator: STUDIES SCHEDULED Pixel Arts ( <url>’m pretty sure it’ll just be a lot better to paste some blurbs he said to me almost word for word. Any inaccuracies are my own: We’ve been making a player settings system that will sync settings across computers by storing them on our servers. It's neat because this is a nice feature for the users but it is also going to be nice for the developers. We won't need to worry about creating database columns or adding properties to the right places. We can just start using the player settings as if they always existed and store almost any object we want there. Saving and downloading levels was a feature that we carried over from the last version of the website and ported. Along with that, though, we are getting a more flexible system that we can build on for curriculum or packages of levels, achievements and more detailed classification of levels so we can build better tools to connect players with levels and programming concepts they might be interested in, as well as bring user-authored levels to the attention of the players. Some light technical details about porting the web service for those who are interested: We’re porting the web service over to ASP.NET wich means we had to recreate the MySQL database as an MS SQL database. We then went on to rewrite the data-access, replacing stored procedures with EntityFramework. As we were doing this we were also enhancing the functionality to support some of the new features we are working on in the game. Right now he’s building the data structure in the database for the settings in the database. IN CONCLUSION As ever, we continue to make our way through offers of assistance. Thank you for working with us to help Code Hero become a reality. Thank you to all our supporters and to everyone giving us feedback on the current beta, it’s energizing to hear about your experiences. From the Project Coordinator: T-SHIRTS First and most importantly, and I apologize for leaving this out before - If anyone wanted a different size than those that were listed in the survey, please message us with your information and we will update your order. Secondly, and quite happily, we have put the past and present survey data together and have sent a request for an estimate for the T-shirts, which is good because I’ve already spent well over 30 hours on this worksheet. If I ever get the time I might write a short book about the experience. I’d start now, but I’m pretty sure it’s not over. SURVEY Since we’re going to keep the survey open indefinitely, you won’t be able to go back and edit your previous entry. If you need to update your information just fill out the survey again. The way we’ve set things up this will most easily ensure that we’ll be able to keep up to date with your most current information. The google form continues to get a great response, thank you to everyone who has submitted a survey. We’ve continued to work on getting in contact with those people whose information has been unclear, either past or present. We’ve gotten back some responses, so those should help keep the process moving. OPENING CODE HERO ON MACS It’s been brought to our attention that some of the newer Mac systems refuse to open Code Hero, that a window pops up citing “unidentified developer” as a problem. One way to get around this is to right-click on the Code Hero app that you have downloaded and select “Open” from the menu that is activated. OTHER Through conversations with some people, we’ve realized that because we want to avoid promising things we do not yet have you guys haven’t been able to see all the effort we’re putting in on other fronts. Efforts are being put in on other fronts. We’ll see if there are ways we can come up with to give a fuller image of what’s going on without being misleading. We’ve gotten a lot of messages of encouragement and support and we appreciate every word. If we could, we’d send a message to every one of you thanking you for boosting our spirits. Thank you also to those that have been stepping forward to volunteer through <email>. We’re continuing to get in touch with people as we can and you’re all on our minds. From the Project Coordinator: VOLUNTEERS As we've been able, we've been talking to those that have offered their help on the project. Apologies to those who we haven’t gotten to yet. We're sorry the process is so slow, but I'd like to reassure you again that we've got you in our thoughts and on the to do list. So far we've got offers for help in QA, programming, community management, system administration and more. If there are those of you at all interested (or just willing) to work on documentation and unit testing, we would love to hear from you. Documentation and testing are usually the last thing people want to spend time on, but with such a number of collaborators they're a big part of making this kind of project work. The time put into this work is invaluable. T-SHIRTS SURVEYS We got a ton of information, thank you to everyone who filled out a survey. We're now working on some spreadsheet magic and some manual magic to translate that data into orders and shipping. Considering that we're going to do t-shirts in batches and that people's addresses are probably going to change in that time, we're going to change our approach a little. The google survey is going to remain open indefinitely. If your address or order information changes between now and when your t-shirt is ordered and sent, you should go to the google survey and fill it out with the new information. When your t-shirt is ordered, you will be notified. After that point we won't be able to implement any changes you make. I know we didn't mention this before, but please try to enter the same e-mail address each time , ideally the e-mail to which the survey was sent. Either that, or your accurate Kickstarter username. If all the information you enter is new, we don't have a way to match it up with the old information. Lastly, we've gotten some queries asking about unreceived emails and surveys from some backers in lower brackets. Unfortunately, the pledge level at which you receive a t-shirt is $42 and up, "Elite Collector's Edition". Anyone below that bracket will not be receiving an e-mail with a link to the survey. Thank you for all your help and feedback. When we’re faced with the 6th iteration of an 11 sheet (and counting) workbook, your support lifts our spirits. Hi everyone, my name’s Michelle and I’m the new Project Coordinator for Code Hero. I’ve got one item for you today. T-SHIRT SURVEYS We have sent out all the T-shirt surveys to all the backer brackets that included a T-shirt as a reward. Kickstarter will only let a project send one survey to each group of backers, so for those of you in the $42 bracket, we’ve sent you all e-mails with a link to a google form that will help us re-gather your T-shirt information. If you don’t see the e-mail in your inbox, please check your spam folder or any folders into which you may have filtered the e-mail. If you don’t want a T-shirt, please still go to the form. There is an choice on the survey to opt out of getting a T-shirt. If you choose that option, you will be taken off the original list from the previous survey. If you do want a T-shirt, even if you filled out the previous survey and even if you e-mailed us a change of address or order, please do fill out the form. If we can get everyone's information in one place, it will be a lot faster to process that information and a lot less prone to error. The T-shirts people want will be able to go out sooner and with fewer mistakes. If we do not hear from you, we will use the information we currently have for you to send your T-shirt. We will do our best to account for the changes of address that people e-mailed to us. It would still help us and your fellow Kickstarter backers greatly if you could go to the google form and fill out that survey. We’re going to keep the google form available for two weeks from this past Sunday. That is, the last day to fill out or change the form will be January 12th . Some of the earlier e-mails stated the date to be earlier than that, but we didn’t plan for the fact that we were only able to send out small batches of e-mails within each 24 hr period, so the date has been extended. A lot of people seem to be having trouble finding their Kickstarter username . Here is how to find it: 1. Sign into Kickstarter 2. In the top right hand corner, you'll see your profile pic and the word "Me" next to it. Click on that, it offers a drop down menu. 3. On the drop down menu, in the left-most column, is the option "My profile" (it's the second option on the list). Click on that and it will show you your Kickstarter username. Thank you to everyone participating in the surveys, we really appreciate you taking the time to fill out that information. At long last, some news: With one more survey Code Hero t-shirts can start shipping, and we have a new beta release with a new level. Making a game that teaches people how to make games is taking longer to make than we bargained for and we’re deeply sorry for the delays. The development of Code Hero has faced setbacks: We ran out of funding and lost our paid staff, and since that time we worked unpaid on Code Hero, making ends meet and raising funds to fulfill backer rewards. Our communication has been spotty and our progress slow, but we continue working on Code Hero to turn the technology and content we built into a complete game. We have a long way to go, but we are recruiting a team to finish the game and working on fulfilling the rewards Code Hero promised. We still face many challenges. We are without funding and working as volunteers. We need to fill many team roles to reach full strength again, and we don’t know how long it will take to find people passionate about the project with time to work on it unpaid. We have a track record of missed delivery dates and long communication silences to change, so we’re not going to start by promising new shipping or release dates until we have something to ship. We are working on figuring out everything, from design to refunds to rewards to funding, but we’re not going to post any dates till we’re sure we can deliver, e.g. till things are in the mail. We are going to attempt to have updates when we can, but they may not be regular. We have three news items: NEWS 1. Alex has raised money to purchase and ship backers their Code Hero T-shirts. 2. We’ve begun recruiting a new developer team, starting with a new project coordinator and programmer. As part of that, we’re making a call out to volunteers who want to help (see the Careers page) . 3. Beta Release 0.2 with the new Spinning Cube level T-SHIRTS We are going to work on fulfilling one reward category at a time. Currently we are working to get your Code Hero shirts made. When we first surveyed you we offered black or white without a non-black color. We think that was a mistake. White t-shirts wear out quickly, so we’re offering an electric blue color alternative that will last longer. Since people weren’t given the blue option before, we think a lot of you will want the blue one instead. Many of you have moved as well and we’ve been able track some changes of address, but we’re concerned we’ve missed some, so we are asking for you to reconfirm your shirt size, color, and address. No worries, anyone who filled out a survey previously will receive a t-shirt whether or not they complete the new survey based on their old survey answers and any updates we’ve been able to catch. As soon as we have people’s information, we can start ordering and shipping shirts. We will aim for batches of about 500 shirts. RECRUITING At our peak, Code Hero had 10 paid developers working full-time on the project. We’re rebuilding the team now as volunteers. If you’re interested in helping make Code Hero we’d like to hear from you. We’re not just looking for game development skills, we’re looking for help in many areas. Take a look at the Careers page to see what specific roles might fit your skills and write to us at <email>. We have a new Project Coordinator who will be helping organize volunteers and we’ll get back to you as soon as we can. BETA RELEASE 0.2 Code Hero Beta 0.2 starts in a Lobby level with doors to the first four beta-quality levels, Code Ray, Transform, Javascript and, now, Spinning Cube. Spinning Cube is a new level that showcases component code editing, which gives you the power to create game objects that run your code continuously. The level introduces this functionality and once you finish making the cube spin in Code Hero, the next room shows the still under-development web browser window inside the game that in future will help you download Unity3D to apply what you’ve learned in-game with the full Unity editor. A lot of work went into the component editor to get it ready for this update and there’s a lot of work remaining to complete this bridge experience so that Code Hero players can learn to make real games with Unity using skills learned in the game. The full Gamebridge campus is also back with a few new things in it. Check out the Historium and try your hand at beating FizzBoss. Our new programmer is building a new server architecture for the game and Version 0.2 has the first piece, a new login system. We’ll be testing it a bit longer before rolling out access. For the time being, everyone can try 0.2 by clicking Guest Mode. Go here to download Code Hero 0.2 THANK YOU This is going to be a bumpy road and it is going to take time. We will make mistakes, but we will keep plugging away at this till we’ve done what we set out to do. Thanks to all of your support, we have built the core of a game that teaches people how to make games. Now we’re rebuilding the team to polish that core into a full game. We are very sorry that it has been so rough and that we’ve let you down. As we can, we will be responding to the numerous questions and concerns backers have in an in-depth look at what went wrong, but right now we are concentrating our efforts on making things right, building the team, developing the game, and delivering rewards. T-shirts are a first step. We haven’t fulfilled our responsibilities to you yet, but by the end of this we’re going to have something awesome to give to the world. Code Hero August Update It has been a while since our last update and some were concerned when our site went down but we're back online with a beta preview release to show you some of the levels in the upcoming Code Hero Beta. We've been working hard on getting the game ready, and we need to work just as hard on communicating better with our backers. We're now resuming weekly updates. You'll hear from us regularly about the progress of the beta and we want to hear from you about what you think of the new game levels. Site back online &amp; under restoration The primerlabs.com site was down and redirected incorrectly to a different site. It is now back online and under maintenance as we restore users and content. We’ll have the full site back up with the upcoming beta release. The Code Hero Beta Preview The beta is coming along and In the interest of giving you more frequent looks at how it is shaping up, we’ve prepared a first beta preview release so you can play two new levels in the game: Download Code Hero Beta Preview The Beta has streamlined level design with achievements to track what you learn. It gets right into the syntax of Javascript to help you solve puzzles and beat FizzBoss. You’ll learn how to create objects and attach scripts to build games with tools that mirror Unity. It then launches the full Unity editor so you can try what you learned and it connects directly to Unity’s online tutorials to get you ready to make your own games. Download it, try it and tell us what you think! If you want to learn Unity now and get ready for Code Hero's beta release, check out Unity's official tutorials at Unity Learn. Here's two screenshots showing the Transforming and Javascript levels in the beta preview: Transforming 101 Javascript 101 We hope you enjoy the beta preview and we'll be back next week with another update. Your path to become a code hero takes you from playing games to making them. We're developing a guide to learning Unity game programming to smooth that transition. This should help you take your next steps to applying the skills taught in the game to making real games of your own. The Unityversity page now features this guide to going from game playing to game making with Unity. It has links to our Unity 101 tutorial and some new interactive tutorials from Coding Jar that you can download. Click here to read the Unityversity guide to learning Unity Code Hack #2: A Physics-based car We've also added a second code ray hack demonstrating how the code ray can create a car with rolling wheel physics. Click here to try it out in your code ray . In the coming weeks, we'll explain how to write code to remote control your car. Coming Soon: the overhauled Javascript level teaches the programming language syntax itself in a more engaging way than before, completing the training players need to reliably master Javascript and beat FizzBoss. Read the full news post and more details on Primer Labs It's been a year since Code Hero's kickstarter and we're releasing a new build with a redesigned Code Ray 101 orientation level to introduce players to the code ray mechanics and code editing. When you start the game and enter Gamebridge, you can reach the new Code Ray 101 level from the entry hall or the Unityscript cube in the Library during the tour. This is the first step towards overhauling the whole beginner experience for players to learn how to manipulate code and the Javascript, Transform.position, and GameObject levels will get the same treatment in upcoming updates. You can download the new version now and learn more about the Code Ray 101 level: <url>’ll be detailing some of the “hacks” I came up with, with complete functional code and an explanation of what each line of code does. I hope this will inspire you to try your own “hacks” and get you exploring in the massively open world of Code Hero. The first “hack” I’ll be showing you is actually a simple modification of the code provided in one of the training areas of Code Hero, the GameObject level's staircase room reached inside the Unity cube of the Library. We’ll be creating a spiral staircase in this version, with shiny, alternating colored stairs. Here's what it looks like: So, let’s dive in. var stairHeight = 200; var newYRotate =0; var newZPos = 0; This section defines the variables used later in the script. stairHeight - The number of steps to be generated. newYRotate - The transform.rotation of the next step to be created. newZPos - The transform.position.z of the next step to be created. var centralSup : GameObject = GameObject.CreatePrimitive(PrimitiveType.Cylinder); Creates a new GameObject, and sets it up to be a Primitive 3D object, a cylinder. This will be our central pillar supporting the stairs. centralSup.transform.localScale = Vector3(5, stairHeight, 5); This line changes the transform.scale of the central pillar. The cylinder will be circular, and uses the stairHeight variable(# of stairs) to determine how high the pillar should be. centralSup.renderer.material.shader = Shader.Find(' Glossy'); centralSup.renderer.material.SetColor ("_SpecColor", Color.red); centralSup.renderer.material.color = new Color(0.0f, 0.0f, 0.0f); The first line here sets the shader of the material to “Glossy” which means it will be shiny. The second line sets the Specular Color to Red, making the shininess appear Red. The third line sets the base color of the cylinder to Black. The overall effect you will see will be a black pillar anywhere the pillar isn’t being hit directly by light, and red wherever it is hit directly be light. centralSup.transform.position = hit.point; This line positions our new cylinder to be the location the code ray hit. Usually, this is somewhere on the floor. for ( i = 0; i &lt; stairHeight; i++) { Obviously we don’t want to go through the work of creating each stair manually, that would be a lot of code. Instead, we will use a loop to do the work for us. In this case, since we know how many steps we want, we’ll use a For Loop. The first part i = 0; creates an Incrementor variable that starts at 0. The second part, i &lt; stairHeight; tells the loop when it should run; this says, run while the incrementor variable is less than the stairHeight variable, which is the number of steps. The last part, i++ tells the loop how much to increase the incrementor variable by every time the loop runs. In this case, we want it to increase by 1. So, this loop will run 200 times, starting at 0, and ending at 199, stepping up by one each time. That’s 200 Stairs var step : GameObject = GameObject.CreatePrimitive(PrimitiveType.Cube); Just like when we created the central pillar from a 3D primitive, now we create the stairs from a 3D primitive, this time a cube. This line of code is inside the loop, so it will run 200 times, creating 200 total stairs. step.transform.position = hit.point; Just like with the cylinder, this sets the transform.position of the stairs. step.transform.position.y+=i; Without this line of code, we would have a giant support pillar, and what would look like a circular platform at the bottom of it. This line increases the height of each step by using our incrementor variable. Step 1 is 1 high, Step 10 is 10 high, and Step 200 is 200 high. This ensures each new stair is equally distant from the previous one. step.transform.Rotate(0,newYRotate,0); Without this line, we would have one giant pillar with fins sticking out along the length of the pillar. This line rotates each step around the central pillar, using the variable newYRotate. We rotate around the Y axis, increasing the amount of rotation for each new step every time the loop executes. step.renderer.material.shader = Shader.Find(' Glossy'); step.renderer.material.SetColor ("_SpecColor", Color.red); These two lines setup the shader type and Specular color for the stairs. Glossy and Red, just like the pillar if(i%2==0){ step.renderer.material.color = new Color(1.0f, 1.0f, 1.0f); }else{ step.renderer.material.color = new Color(0.0f, 0.0f, 0.0f); } This block of code, an IF Statement, decides what color each stair should be, alternating between black and white. Let me explain how it works. The first line if(i%2==0) is asking if the incrementor variable i is an even number. If it is, it sets the color of the stair to White. Otherwise, it sets the stair color to Black. The % symbol is known as Modulus, and when used, returns the remainder of division. If the remainder is 0, i is an even number. If it is ANYTHING else, i is an odd number. You can read i%2 as “remainder of the value of i divided by 2.” step.transform.localScale += Vector3(20,.2,1); This line sets the transform.localScale of the stairs. newYRotate+=15; This line increases the Y rotation for each stair by 15 each time the loop runs. This means each stair will be 15 degrees higher than the previous. And that’s it. We create a central pillar, which is really just there for looks. We generate the stairs using a loop, and we change the color of each step using an if statement with a modulus. These are some extremely powerful programming concepts that you will use regularly when coding, so keep them in mind, they’ll definitely be useful to you. I hope this has been educational and interesting to you, and I hope you go try this out in Code Hero. Moreover, I would like to see some of you make some improvements. Maybe add a handrail; these steps are easy to fly off when you’re running up and down them. Maybe start the rotation of the stairs on the edge of the stair, rather than the middle. Change the step height to be more natural. Or, do something completely different. This was the first challenge I taught my students to do, and we'll be sharing many more. Please feel free to email me at <email> with your own hack. If it’s cool, maybe we’ll feature your work in a future update. Last week's update and Alpha 3 focused on providing the FizzBoss challenge to test Unityscript algorithm and manipulation skills taught in the game. Next week's update will be the 1 year anniversary of Code Hero's Kickstarter and it will come with Code Hero Alpha 4. Alpha 4's focus is on teaching code skills step-by-step so every beginner who plays will be able to master the skills to beat FizzBoss. It starts with a new Orientation level that introduces how to use the code ray and a new Unityscript level to teach the Javascript programming language itself. Here's a peek at the new Orientation level coming soon: Here's the complete code of the above example for easier copy-pasting into the Code Ray editor. To access the Code Ray in-game, press the tile/backquote `~ key between tab and escape, paste this code into the text box, and hit `~ again to save and close the editor. Then point at the ground somewhere and see what happens: //Vars var stairHeight = 200; var newYRotate =0; var newXPos = 0; var newZPos = 0; //Central Support Cylinder var centralSup : GameObject = GameObject.CreatePrimitive(PrimitiveType.Cylinder); centralSup.transform.localScale = Vector3(5, stairHeight, 5); centralSup.renderer.material.shader = Shader.Find(' Glossy'); centralSup.renderer.material.SetColor ("_SpecColor", Color.red); centralSup.renderer.material.color = new Color(0.0f, 0.0f, 0.0f); centralSup.transform.position = hit.point; //Step generation. Set staircase height with stairHeight Var. for ( i = 0; i &lt; stairHeight; i++) { var step : GameObject = GameObject.CreatePrimitive(PrimitiveType.Cube);var rail : GameObject = GameObject.CreatePrimitive(PrimitiveType.Cube);step.transform.position = hit.point;//diagonalsstep.transform.position.y+=i; //diagonalsstep.transform.Rotate(0,newYRotate,0);step.renderer.material.shader = Shader.Find(' Glossy');step.renderer.material.SetColor ("_SpecColor", Color.red); //Alternate Step Color if(i%2==0){ step.renderer.material.color = new Color(1.0f, 1.0f, 1.0f); }else{ step.renderer.material.color = new Color(0.0f, 0.0f, 0.0f); } step.transform.localScale += Vector3(20,.2,1); rail.transform.localScale += Vector3(1,3,1); newYRotate+=15; } This is the first of our now weekly Code Hero updates and it comes with a new build, Code Hero Alpha 3. We'll be updating every Monday and posting new builds with big update on the first every month. We'll put out incremental builds like this one with as many of those updates as possible. Alpha 3's focus is on on improving Labyrinth, FizzBoss and Login. Better step-by-step blinking instructions in the Labyrinth mission that starts your tour towards shipping your first game Restored and improved FizzBoss challenge for you to test your Unityscript programming skills against. The FizzBoss briefing Ada gives you has been improved by allowing her to answer questions the player may have about different aspects of the challenge. This lets you get as few or as many hints as you may need We'll expand on the Briefing hint questions to make them more comprehensive and reflective of the questions our players have in tackling this first major programming test. You can play using Guest Mode if you have any problems with login. Login should work using the account name that you have on the PrimerLabs site under <url>’s been the most active developer of innovative hacks and creations since the very first Code Hero prototype A word from Code Hero’s new community manager, Shaun Hansel: I taught students how to code in Java for several years, and I had been using games as a teaching device, to keep students interested and engaged. When I learned about Code Hero, downloaded and played the prototype, I was floored. It was a genius idea, and I just wanted to see it completed. I installed the prototype version on some of the computers at the school, and had my Computer Science students play it. They loved the idea, and had a great time trying to do things the game wasn’t intended to do. Genius. After playing through the prototype, I hit the website and read everything I could about it and the company, and there I learned about Unity. I downloaded a copy and went through the tutorials on the Primer website, and learned how to load a level. Hey, Code Hero has levels, and it was made in Unity, so... Code Hero was the reason I decided to learn how to use Unity. My original goal in learning Unity was to be able to better hack Code Hero, and make it do things it wasn’t meant to do, like drive cars or play Pong. I’m still very excited about Code Hero, and because of it, I’m working on a few of my own games in Unity now. With my bio out of the way, I’ll get down to business. I will be working with Primer as the new Community Manager. Primarily I will be focusing on keeping lines of communication clear, both from Kickstarter Backers and fans, as well as from the Code Hero team. I will be working toward making the Primer Forums a central line of communication to and from the community. I will also be monitoring the Kickstarter comments and the Facebook Code Hero Army pages, and will ensure everyone receives the same information and response to questions in a timely and regular manner. While we wait for the next version to come out, I highly recommend you download the latest version and play around with it. Maybe download Unity, read some tutorials, learn some Unityscript, and come prepared for the next version. - Shaun Hansel, <email> Questions &amp; Answers We're adding a summary of the answers to questions people have asked us here. We'll continue to add to the Q&amp;A and summarize the whole plan for going forward as best we can. We realize that these answers may not be enough for some, and we're not going to be able to make everybody happy until we deliver the game after a lot more hard work and perseverance. You may still have doubts about our chances of success, but we whill not waver in our commitment to finishing this project and creating an awesome game about making games. All we ask is the patience and support to continue our mission and finish the job because however difficult it is and however long it takes, Code Hero is going to make learning to code easier and faster and the work and time will be worth it for all the lives it can change when it is complete. How we began I began developing Code Hero on my own in January of 2011. I hired some programmer friends to help me make more progress and we built a playable game prototype. The Original Prototype The original prototype was a short but playable game with a code ray that shot javascript and executed it upon the thing you hit. It taught the Javascript syntax, GameObject.CreatePrimitive and .Destroy, and Transform.position with Portal-like puzzles, and it challenged the player to beat FizzBoss, a test of programming skill. The plan to expand Code Hero into a full game The original code ray puzzle solving was a gamer-friendly way to teach players to manipulate objects with code, but to teach players how to put together their own worlds required a way to create and edit objects and attach code to them. This required building an interface for editing, loading and saving Unity game levels. To do this required much more sophisticated programming and design than the original code raycasting prototype, and we knew we needed to raise money to do that. Our plan to finish the game with the Kickstarter funding we had We narrowed the game’s goals down to 3 things that players would be introduced to by Ada Lovelace in a tour of the Gamebridge Unityversity world: 1. The Arcade: Playing Labyrinth levels that you can hack from within to introduce how games work and playing user-created games made by other players. 2. The Library: Unityscript puzzle levels that teach and test your mastery of Unity programming concepts, with levels for each of the core classes. 3. The Shipyard: The ability to create user-generated levels and share them with other players online. We wanted players to be able to get used to the powerful level-editing and programming tools of Unity within a fun and safe game environment so they could take their skills directly into real Unity game development. This was our plan to expand the original prototype into a fully fledged game to teach game programming. The Kickstarter We launched the Kickstarter in January 2012 with a $100,000 goal. The Kickstarter ended on February 23, 2012. In the last 10 days we went from We raised $170,954. We finally had the resources to build it. Kickstarter charged 5% while Amazon charged 3-5% for credit card processing fees. After fees, we had about $153K to work with. We estimated costs of making and shipping all physical rewards at about $30,000, which left us about $123K for development costs. Our first priority was to hire more programmers and artists to get the game built. Team leader Alex Peake was already doing code, art, music, design, writing, and so on. We hired a producer, an instructional designer, 3 Unity programmers and 2 artists for the game itself, plus 3 web developers for the site’s design, Drupal development, server administration and core C# level upload/download backend. Everyone on the project worked for low rates to make the money last and help the project we all believed in succeed. To make it work on a low budget, 6 of us became roommates in the cheapest place we could find near Noisebridge hackerspace where most of us met. We filled it with bunkbeds, worked together every day and still live together now. IGN generously gave us free office space as part of their indie game incubator, and we worked there alongside other indie developers in cubicles most of the time. Altogether, our payroll went from about $15K to about $25K per month and should have lasted us about 6 months. We thought that would be enough time to develop the prototype into the fully fledged game, and we set to work building it. Why did the project run out of money Code Hero’s development was highly complex and everything took longer than we expected. Below is a more detailed breakdown of some of the things that delayed the project. On a tight budget, delays aren't recoverable by asking for extensions like with a publisher, and each slowdown bit into our remaining funds. We had completed preparations to order and ship the physical shirts and boxes when we realized that at that burn rate we weren't going to have enough money to finish the game and we'd be shipping shirts and boxes for a game that wouldn't come out unless we found a way to fund the rest of the development. What happened when we ran out of money We'd been talking to investors about raising more money to fund development to completion. When the funds literally ran out, many of us kept working knowing we might not get paid for it because of our faith in what we were building and our belief that we'd find new funding. Funding talks fell through, and most of the full-time team had to find other work to pay the bills. What Caused Delays A number of creative and technical challenges cost us precious time. These aren't excuses and we're responsible for our mistakes. This is a partial list of them: Leadership: I, Alex Peake, as the originator of Code Hero and leader of the development team, bear chief responsibility for the whole of the project. Everyone on the team worked incredibly hard and did terrific work, and I'm proud of what we accomplished and I am responsible for not leading the team better and correcting our course early enough to narrow the scope and get a good game done with what we had instead of holding on to the original plan about what the game needed to be. I've learned a lot from my mistakes, and I'm going to take heed of all the advice and lessons learned through this to take responsibility for turning this project around and getting Code Hero back on track and funded and completed so people can play it and learn to code and make games of their own. Inexperience: Most of our team was made up of talented students and indies rather than long-time game industry veterans. We were figuring it out as we went along by asking more experienced developers how we should do things. This cost us a lot of time. Doing things that haven’t been done before: It’s hard to find proven models to follow when you make a game that has programming-based gameplay that is completely different from any games that preceded it. Online Services Development: The online component of Code Hero is necessary to allow players to build and share their work but it adds to the project’s complexity a lot to simultaneously develop a client game app and a web site and backend. Changing Version Control: We were having difficulties with Unity Asset Server not syncing files and had to manually re-merge many changes. When we attempted to switch over to Subversion, the switch caused more problems than it solved and we went back to using Asset Server. Rebuilding Project Files: After PAX East and our first demo of the post-Kickstarter alpha of Code Hero, we decided to rebuild the project and rewrite a number of things that were originally in Javascript using C#. This process cleaned up the code base and project structure, but it broke connections between assets in many of the scene files and it took a long time to get everything working again. Our Current Financial Situation We’re out of funds and this has slowed progress down compared to when we were fully funded. The Current Team However, we still have a team. I continue to do lead programming, art, music, writing and design. 5 programmers are continuing to work as volunteers. We will deliver the game we’ve promised and complete the project. Volunteers Wanted If you're interested in contributing to the project, contact <email> and let us know what skills you'd like to contribute. We aren't currently funded but if you're interested in joining our current volunteer team, you could make a contribution and be part of finishing the project. Backer Rewards Why didn't the physical Kickstarter rewards ship already? We were planning to ship them early on and had the shirt order ready to go but we had difficulty figuring out an auto-update mechanism for the USB drives that would keep them useful for a long time. In retrospect, we should have just shipped all the shirt-only orders early on until we figured out the rest. Once development was falling behind schedule we were trying to finish the game with what we had left so we could give people the game first and foremost. We tried to raise more money to pay for the shirts and rewards and a second round of funding, but that didn't work out. When will people receive physical Kickstarter rewards? We will still fulfill our physical rewards to backers. We don't have a date we can promise yet because it is contingent on making more progressa and raising more funds, but we're committed to delivering the game and the rewards and refunds to anybody who doesn't want to wait to see those completed. Backer Refunds will take time We're obligated to refund backers who haven't received their rewards and aren't willing to wait for us to make more progress and get new funding to fulfill our backer obligations. Because we currently don't have the money to make the shirts or pay refunds, backers who want them will have to wait until we can afford to pay them. Email <email> if you want a refund. Will team members get paid for work they did after we ran out of money? Yes, all team members who worked without getting paid for the last month will get compensated when we have the funds to do so. MONEY Did you spend money traveling to conferences? Yes. We were invited to exhibit at PAX East by Kickstarter. We also exhibited at PAX Prime in the Indie Megabooth. We worked hard preparing playable demos for both PAXes that got the game’s core into playable states that random gamers could try and give us feedback on. Some people may argue that PAX is a waste of development funds for a Kickstarter project, but our team worked throughout the show and the feedback and advice we got from other developers and players during the show improved the game more than any other time in development. Did you spend money travelling on other trips? My other travel was by invitation and no Kickstarter money was spent on it. I was invited by THNK to visit Amsterdam for an all-expenses paid trip to teach a workshop for social entrepreneurs about making interactive storytelling gameplay. I was working on the content in Code Hero for the workshop already, and it was an opportunity to test it with real students. PROJECT ROADMAP What's the release schedule now? We're releasing an interim Alpha 2 build right now. We'll put put up new builds each month when it is stable enough to do so. The next major alpha milestone we're aiming for will tie the features that are in a raw state in the current builds into a form that teaches a complete class worth of material so that you can sit down, learn a bunch, apply it in-game, experiment, then download and install the Unity game engine and transfer the skills you've learned as much as possible to doing real game development and taking advantage of all the tutorials we've collected that exist to help you continue your learning. We plan to have learning mode functional in May, and it becomes the first of the 3 major pieces we have to complete. Part 2 is the gameplay for non-programmers who strictly want to have fun and learn a bit as they play. That's an important requirement to make the game work for gamers who aren't primarily motivated by learning, and it is what sets Code Hero apart from other approaches to learning. There are many methods of learning to code, but all require your motivation. As a game that delivers a really fun experience, Code Hero's gameplay can make learning to code something you do for fun in order to enjoy the game rather than requiring a ton of motivation. Almost everyone can learn to code if they'd enjoy it enough. We plan to have fun mode functional in August. Part 3 is to keep building up the editor tools so that people can not just start learning projects in Code Hero but that they can build games as close to the full functionality of the free version of Unity as possible and even export their projects to take them into Unity once they're ready and publish them on any platform and app store they want to. We aim to have the game making and sharing mode functional by end of year. This roadmap isn't set in stone yet and will change as we get more resources and volunteers and establish a clearer timeline for how long things are going to take. Our first priority though is to reach phase 1 where people can learn enough from Code Hero to get into coding and game development with Unity so individuals and schools can use it to jumpstart their code literacy learning. This is a difficult time but we will get through it This is an extremely difficult experience for any developer to go through, especially for it to happen to a project we care this much about, and we hope you'll bear with us as we continue to try to address people's questions and get on with building the game and showing what's in the works. We know this has been stressful for backers, and we're going to push through and get the game finished with or without additional funding. Could you make Code Hero open source? While we're big believers in open-source, there aren't many game companies we know of that make games as open-source. Games are more art and craft than code, and have asset workflows much more complex than pure software. It's something we aspire to be able to do eventually, but we're not going to go open source at this time. We've considered open-sourcing parts of Code Hero in the future. We're not ready to do that at this time, but we're open to suggestions and a discussion of ways it could work. CODE HERO ALPHA 2 RELEASE There's a lot of features in development that aren't polished or stable enough yet to go into playable builds of Code Hero. Here's some things you can find in the new game: You can download Code Hero Alpha 2 now . (It may still be uploading, if so check back later) What's new in Code Hero Alpha 2: We're going to put out a more extensive post soon detailing things in Alpha 2 but here are a few things to look for: Guest Mode Anyone can now try the beginning of Code Hero alpha without having to buy the game. Eliza &amp; AIML Chatbot AIs We’ve got levels in development with talking AIs that you can talk to. We’re developing levels that teach you how to hack their code to make your own AI characters that can talk to you and each other. Syntax highlighting &amp; auto-indenting code editor We've rewritten the Unityscript code text editor using a little known UnityEngine.TextEditor API class that allows the text editor to implement all of the features you need to write code well. It now has syntax coloring, inserts tabs correctly and auto-indents new lines properly. Auto-complete and automatic API reference lookup is next to make writing code as fun for beginners and efficient for pros as possible. We're going to try using it to edit Code Hero's own source code to eat our own dogfood and help expose all the features it should have to be a useful day-to-day code editor. Sorry to keep everyone in suspense a few more days. We thought we could announce and release pre-PAX so we wouldn't be crushed with both at once which turned out to be impossible. We need to be online 24/7 during launch to talk to players and open Gamebridge Unityversity with a bang. We are recovering physically from PAX and nailing down all the bugs that cropped up with the new level creator that syncs what you build to the server. We're going to ship the new Code Hero Alpha to everyone this Friday. Full PAX report and announcement coming also this week! Here is the trailer of the new Code Hero for you to enjoy till more updates and the Alpha release this Friday. <url>– September 2nd. You will be able to find us at the Indie Mega Booth next to Alexander Bruce's Antichamber , Jonathan Blow's The Witness , Phil Fish's Fez , Strage Loop Games , and more. We know that you have many questions. This update should answer most of them. We will give you an inside look at the new direction we are taking Code Hero in order to make it the game every soon-to-learn programmer deserves. Finally, we want to disclose that this update is to share with you our thought process and what we aim for. Some of what you see here is subject to change as we get closer to our deadline. What's In Store For Code Hero Let's talk about what Code Hero is all about. Many of you have already played the first preview version we released during the Kickstarter in which you learned to shoot code to transform, find, delete and push objects around and defeat FizzBoss. This approach to learning through puzzles is being expanded to form the first piece of Code Hero. The second piece is something much more ambitious and creative. Programming isn't just a skill to test through examples and exercises like math homework. Programming is a creative craft where you BUILD things up one line of code at a time. To build a game world is one of the most rewarding and enjoyable experiences in all of programming, and Code Hero gives you the power to create new worlds and breathe life into them with your own code. This is a true sandbox where you not only place blocks and prefabs to build up interesting worlds quickly, you also write wholly new code and objects that do things that have never been done before. This is the power to create universes. This is programming. And this is how Code Hero STARTS. Your initiation into Gamebridge Unityversity begins with creating and shipping your first game, because real artists ship. Code Hero isn't just a game where you learn programming through puzzles, it is a game world whose puzzles teach you how to craft your own puzzles and worlds. Most importantly, it teaches you to publish your worlds for the whole world to play so that you'll take pride and ownership over what you learn to make. You can't walk away having just "sort of" learned programming without building anything you can be proud of. You never forget your first release. You may never think your first game is ready to share with the world. Ships in harbor are safe. But that's not why ships are built. Programming is art, real artists ship, and Code Hero is a game about becoming a real artist. Real Learning In Unity Code Hero is built with the Unity game engine, so the code you learn is real Unity code and what you build with it is really yours. The code you learn to write is Javascript code that calls the Unity API and the worlds you learn to create can eventually be exported as real Unity projects. Code Hero's world building user interface resembles the Unity editor so that you can learn Unity within the guided Code Hero game experience and when you're ready to install the full Unity game engine you'll already know how to use it. Here's a screenshot of the user interface in development: Unlocking New Code Hero's code ray console lets you place, move, rotate and scale objects and edit the code on them to set up a level the way you like it. In code puzzle levels, you'll only be able to edit and manipulate certain objects to master the code concepts and solve the puzzles, but in sandbox mode you'll be able to alter everything from a blank slate or build off templates. Every code puzzle level you play through will teach you more programming concepts and unlock more objects with the code you've learned. You'll get new missions and templates challenging you to place new objects and code in your own levels. And most importantly, you won't just get to share your levels with other players - you'll be able to invite them to help you! Social Coding You'll be able to share your levels with your friends and the world, and decide who can help you edit and work on your worlds as part of your team. Most importantly, you'll be be able to see each others' code and mentor one another as you explore the creativity that is real game programming. Code Hero's puzzle levels will teach you the fundamentals of programming, and you will be able to teach each other how to apply the concepts to build epic game worlds. This will be especially useful for teaching and mentoring other learners so everybody gets the mentoring they need. Coming Soon: Alpha The version we released before Kickstarter was a prototype compared to the full game we're building now. In the upcoming alpha of Code Hero, you'll experience some of the core gameplay: Playing code puzzle levels to master Javascript and the Unity API Creating and saving games and levels of your own Playing others' levels and unlocking their assets to use in creating your own levels Collaborating with other coders to build and code together The New Programming Team We're up to 3 dedicated programmers now, with Eriks Strals, Vinnie Iannone and Aaron Davis working together as a coding machine. We're hiring more senior devs (see below) and interns will get the chance to participate in the development when Code Hero goes live. The New Art Team &amp; The New Ada Lovelace Code Hero's first prototype was quite literally "programmer art", so we have a new art team to make Code Hero beautiful. We've got Gizmo from Farbrausch for art direction, David Lopez for props and environments and Nicole Greicar doing characters. Nicole has been modeling Code Hero's star mentor Ada Lovelace. Here she is in an early 3D version next to the quintessential Ada Lovelace portrait: The New Art Director For visuals and artistic direction, we've hired Gizmo from Farbrausch. You might remember a video of one of the Farbrausch demos we posted on one of our Kickstarter updates: <url>’s artistic direction. Gizmo has introduced a new bright matrix color palette which makes virtual reality more colorful and appealing than the dark cyber-Tron aesthetic of the prototype build. The Gamebridge Unityversity Campus World The central hub of Code Hero is the Gamebridge Unityversity campus. This is where you arrive and begin your studies with the grand tour that culminates in making your first game and shipping it to enter the Humantheon for your Matriculation as a code hero. Code Hero joined the IGN Indie Open House Code Hero joined and completed the IGN Indie Open House incubator! We shared office space with a some awesome indie game development teams, including Wolfire ( Lugaru &amp; Overgrowth ), Interabang ( Super Combo Man ), Team 2Bit ( Fist Puncher ), Misfits Attic ( A Virus Named Tom ), Cryptic Sea ( Gish &amp; A New Zero ) and our newest arrival Plain Vanilla Games ( Moogies ) who also happens to be backed by David Helgason! You can see how amazing IGN' is in an episode of TechCrunch Cribs and we had a blast working there. Big thanks to Drew Curby, Todd Northcutt and everyone at IGN and Gamespy for hosting us and helping Code Hero get started. We've grown fast and we're moving on to a new office space for the final phase towards release. The Extra Creditz Education Panel at PAX East At PAX East, Alex was invited by James Portnow of Extra Creditz to join the conversation about Educating Through Play: The Future of American Education. <url># and Unityscript? We are looking for the most talented and creative Unity programmers to help build Code Hero. This is a game by programmers for programmers that become programmers by playing. World editing gameplay involves some epic tech solutions that go above and beyond most entertainment products. We need game developers with Unity experience and game programming ability. We are looking for senior programmers to fill various positions to work on Code Hero and beyond. Please send use your resume to <email> and we will be in touch as soon as possible. The Road To Release We have promised you an exciting game and we will deliver. We were pretty quiet since Kickstarter, and the quiet ends now. We'll be posting more updates to our fans on Kickstarter, Facebook and the newsletter showing the game's evolution on the road to release, and PAX will be just the beginning as we have a big roadmap for expansions to Code Hero after launch. Once you the players can start learning and building things, there's no end to what you can create and we're extremely excited about evolving Code Hero to expand your creative powers with it. If you have not done so, connect with us on our Code Hero Facebook Page and join the Code Hero Army , Code Hero Army 3rd and subsequent groups on Facebook we will be forming to interact with our fans and post random updates there. Sincerely; Alex Peake &amp; the whole Code Hero Team Hello Code Heroes! We've been crunch crunch crunching the new version of Code Hero in preparation for PAX East Boston! We're going to have a booth with Kickstarter in Room 103! We're readying the Internship program as part of our broad push into schools starting with AMSA Charter School in Boston April 10. Here's more details: <url>" Code Hero Army " faction within the game. Load up your custom mecha forces to get some glory in the name of spreading code literacy throughout the Galaxy! Our mission is to liberate the people of the Illyrian Hegemony , a tyrannical aristocracy that oppresses its common citizens by censoring their Internets to prevent them from learning to code! Together, we shall set minds free! WE DID IT! THANK YOU TO ALL OUR BACKERS! We raised $170,954 with 7459 backers which combined with our direct sales on the CodeHero.org store and private donations puts us at over $200K in total funding! This will be enough to start building Code Hero into a DRM-free offline friendly single-player game AND a multiplayer MMO where everyone can learn to code, create and play together! We will continue to publish Updates about the progress of Code Hero on Kickstarter and via PrimerLabs.com Email Updates as we release new versions of the game and have news on the shipping of your rewards. If you're seeing this before you got a chance to pledge, you haven't missed your opportunity to participate! For those who missed the Kickstarter, you can now continue to buy Code Hero on our store! We will continue to honor the same pledge levels as on the Kickstarter, so you haven't missed out on becoming an intern, the 1K12 Code Hero School package or the $1776 Senator &amp; Congress Challenge chance for a public official to get Code Hero for a whole state! <url>"final release" and more soon!) We're releasing tonight at midnight an edition of the game with Minecraft creator Jeb in it! <url>"Ask me about Code Hero", talk about it via Chat, or just do something else more impactful to helping humanity and enjoying life instead! The entire game media has gotten behind us and we're at 75K surging to hit $100K TODAY! We're on the front page of Reddit r/gaming! When we hit the front page of Reddit, EVERYONE will say to us tomorrow, "I saw it on Reddit and backed it!" Go this page right now and vote for your favorite story! (type it into your browser): reddit.com/r/gaming Tell your friends to go there and vote! Oh yeah, and we're coming out on Forbes and Gamasutra and Huffington Post and a bunch of other stuff I don't have time to mention! Thank you everyone! This is our moment! For every young mind filled with a thousand dreams waiting to be made possible, for every parent with a child in need of a mentor, for every gamer who deserves a game worth more than just playing, this is our voice to speak up for the voiceless to give everyone a voice through gaming so that the medium that we love will truly become our medium! Today's gamers are tomorrow's game developers, making the games that need to be made, teaching the things that need teaching, inspiring the aspirations that need fulfilling, until reality's brokenness is fixed by gamers, for gamers, till we can make the world that gamers have wrought a utopian playland! CODE HERO KICKSTARTER IS OVER $40,000! CALLING ALL SCHOOLS &amp; SENATORS: REVOLUTIONIZE YOUR STATE'S EDUCATION! Calling all students, parents, teachers, educators, senators, congresspeople, and petitioners of the former: The 1 K12 Code Hero School Challenge Give your children more than a game: Give their whole school programming peers that will engage and inspire each other. A parent, teacher, student, administrator or entrepreneurial youth can pledge to give a school of their choosing a special school-wide Code Hero access. All their students will receive school accounts for Code Hero. Teachers will be trained by the Code Hero team to be able to mentor students who can mentor each other. Code Hero School will feature advanced metrics and collaborative gameplay that will allow teachers to integrate it into making projects for every subject and class in the school. Art classes can produce game art for history projects that become simulated historical worlds with math class showing how engineering created disruptive new industries that economics class analyzes for modern parallels [HINT HINT]. Check out Hack The Future and Unityversity to see how we teach large groups of kids already to make and present games on their first day. PETITIONERS WELCOME. You can pledge at this level to petition your school to try it: Call them, ask them if they will accept it on behalf of all their students. This doesn't require a school approval process or a strategy session: It just opens the door for a new kind of education through games that kids actually want and enjoy! UNCONDITIONAL GIVING: If you can't get a school to accept, you can give it directly to the students of the school to form a Code Club to provide the power of one good example: a school where every student can code fluently and create games as group projects as easily as presentation poster boards and science fair exhibits. Every state needs at least one school that will take up the school challenge to show there is no state that is not ready to become an economic powerhouse, that there is no district that can't emulate Silicon Valley, and that there is no school that can't become a flourishing entrepreneurial hotbed of student-created startups! $1776: SENATOR HERO: ACCEPT THE CHALLENGE OF REVOLUTIONIZING EDUCATION FOR YOUR STATE! Every Senator or Congressman who accepts this challenge will bestow a K12 Code Hero School License for every student in every school in their state or district. Make a statement to the world that your constituents all deserve to have the power of code and that code is the key to American prosperity. Show that you are taking action to revolutionize education by making learning to code a universal part of gaining full literacy as an informed and empowered citizenry of a country that will continue to lead the 21st century! NOTE: PETITIONERS WELCOME . If you are not a Senator, you can pledge at this level to petition your representatives: Call them, ask them if they will accept it on behalf of all their voters. This doesn't require a school approval process or a strategy session: It just opens the door for a new kind of education through games that kids actually want and enjoy! If you can't get a Representative to accept, you can convert this to a 1 K 12 pledge and give it to one school in their district to provide the power of one good example: a school where every student can code fluently and create games as group projects as easily as presentation posterboards and science fair exhibits. Every state needs at least one representative that will take up this challenge to show there is no state that is not ready to become an economic powerhouse, that there is no district that can't emulate Silicon Valley, and that there is no school that can't become a flourishing entrepreneurial hotbed of student-created startups! The press is rolling in faster than we can track <url>#comment Boing Boing: <url>… : <url>